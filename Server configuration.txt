Virtual Private Server Setup


### Базовая конфигурация ###

1) Подключиться к серверу по ssh 
$ ssh root@<your_server_ip>


2) Добавиить пользователя 
# adduser <username>


3) Дать пользователю права sudo 
# usermod -aG sudo <username>


4) Настраиваем нестандартный порт для ssh
# vim /etc/ssh/sshd_conf
 	Port 22 -> Port <61337>
Можно выбрать любой порт в диапазоне (49152 - 65535)
# systemctl restart ssh
Не отключаясь, попробовать подключится по новому порту


5) Настраиваем файерволл
# ufw allow <61337>/tcp		разрешаем доступ по новому порту ssh ДО включения, что бы не заблокроваться
# ufw enable			включаем файерволл
# ufw status			просмотреть правила файерволла
# ufw allow <port>/<protocol>	разрешить подключение по порту
# ufw delete <номер правила>	удалить правило, выводимое при ufw status под номером


6) Настраиваем подключение по ключам
$ ssh-keygen		генерируем пару ключей на КЛИЕНТЕ
$ scp ~/.ssh/id_rsa.pub root@<your_server_ip>:/root/.ssh/<laptop>.pub 


Подключаемся к серверу
# cd /root/.ssh/
# cat <laptop>.pub >> authorized_keys
Не отключаясь, пробуем подключится с ключом
# vim /etc/ssh/sshd_config
	PasswordAuthentification no (раскоментировать)
# systemctl restart ssh


7) Разрешаем доступ по ssh для пользователя
# rsync --archive --chown=<username>:<username> ~/.ssh /home/<username>
Пробуем подключится под именем пользователя


8) Запрещаем доступ от имени рута
# vim /etc/ssh/sshd_config
	PermitRootLogin yes -> no
# systemctl restart ssh


9) Добавляем на клиенте alias на подключение
$ touch ~/.ssh/config
$ vim ~/.ssh/config
	Host <My_Super_server>
	User <username>
	Port <61337>
	HostName <your_server_ip>




### Установка и настройка веб-сайта ###

1) Установка apache2
$ sudo apt update
$ sudo apt install apache2


2) Подправляем файерволл
$ sudo ufw app list
$ sudo ufw allow 'Apache Full'


3) Настраиваем виртуальные хосты (к этому моменту у нас должно быть куплено доменное имя)
$ sudo mkdir /var/www/<domain_name>
$ sudo chown -R $USER:$USER /var/www/<domain_name>
$ sudo chmod -R 755 /var/www/<domain_name>
$ sudo vim /var/www/<domain_name>/index.html
$ sudo vim /etc/apache2/sites-availible/<domain_name>.conf
	<VirtualHost *:80>
    		ServerAdmin <name>
    		ServerName <domain_name>
    		ServerAlias www.<domain_name>
    		DocumentRoot /var/www/<domain_name>
		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
$ sudo a2ensite <domain_name>.conf	включаем наш сайт
$ sudo a2dissite 000-default.conf	отключаем стандартную конфигурацию
$ sudo apache2ctl configtest		проверяем конфигурацию, все ли в порядке
$ sudo systemctl restart apache2	


4) Готовим площадку для получениия HTTPS
$ sudo apt install certbot python3-certbot-apache
$ sudo vim /etc/apache2/sites-availible/<domain_name>.conf
	...
	ServerName <domain_name>
	ServerAlias www.<domain_name>
	...
Убедится, что все соответствует
$ sudo apache2ctl configtest
$ sudo systemctl reload apache2


5) Получение сертификата
$ sudo certbot --apache
Скрипт запросит действующую почту, что бы уведомлять о безопасности
(A)gree/(C)ancel: A
(Y)es/(N)o: N
ENTER
Select the appropriate number [1-2] then [enter] (press 'c' to cancel): 2


6) Проверка автоматического обновления Certbot
$ sudo systemctl status certbot.timer
$ sudo certbot renew --dry-ru		тестируем автопродление
Если возникнут проблемы с автообновлением, бот отправит письмо на почту

6.1) Добавление поддомена
$ letsencrypt certificates
$ letsencrypt --apache --cert-name <cert name> -d <old.com> -d <www.old.com> -d <sub.old.com>
(U)pdate cert/(C)ancel: U



7) Настройка web proxie на apache
добавить в /etc/apache/sites-available/site-se-ssl.conf
<VirtualHost *:443>
        ServerAdmin scan
        ServerName cloud.<example.com>
        ServerAlias www.cloud.<example.com>
        DocumentRoot /var/www/cloud.<example.com>
        ErrorDocument 404 https://<example.com>/err404.html
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
        Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains; preload"
        <Location "/">
                ProxyPass http://192.168.255.20:8080/
                ProxyPassReverse http://192.168.255.20:8080/
        </Location>

Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/<example.com>/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/<example.com>/privkey.pem
</VirtualHost>



8) Проблема с webDAVS nextcloud
добавить в /etc/apapche/sites-available/site-se-ssl.conf
после </VirtualHost> и <IfModule>

RewriteEngine On
RewriteRule ^/\.well-known/carddav https://cloud.<example.com>/remote.php/dav/ [R=301,L]
RewriteRule ^/\.well-known/caldav https://cloud.<example.com>/remote.php/dav/ [R=301,L]


9) доступ через клиент к Nextcloud за reverse proxy
На сервере, где развернут nextcloud:
В /var/www/html/config/config.php добавить

'overwritehost' => 'cloud.example.com:443',
'overwriteprotocol' => 'https',



Ссылки:
https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-20-04
https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04
https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04#step-5-—-setting-up-virtual-hosts-(recommended)
https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04-ru
https://www.reg.ru
https://cp.vdsina.ru

apache error page:
https://www.digitalocean.com/community/tutorials/how-to-configure-apache-to-use-custom-error-pages-on-ubuntu-14-04



Nextcloud
https://bayton.org/docs/nextcloud/installing-nextcloud-on-ubuntu-16-04-lts-with-redis-apcu-ssl-apache/#6-2-enable-caching

Поправка: на этапе настройки redis-сервера, вместо параметра:
unixsocket /var/run/redis/redis.sock 
может быть 
unixsocket /var/run/redis/redis-server.sock
в таком случае в ../nextcloud/config/config.php
нужно добавить 
'host' => '/var/run/redis/redis-server.sock',
вместо указанного в мануале ../redis.sock


Php Mysql 
https://www.tutorialrepublic.com/php-tutorial/php-mysql-insert-query.php


Minecraft Server
https://www.linuxnorth.org/minecraft/modded_linux.html#Step%205%20-%20Optional--%20Configure%20Minecraft%20to%20start%20on%20bootup


Docker
Установка
$ sudo apt update
$ sudo apt install apt-transport-https ca-certificates curl software-properties-common
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
$ sudo apt update
$ apt-cache policy docker-ce
$ sudo apt install docker-ce


*Проблема при установке на Ubuntu Server
Process: 22879 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=exited, status=1/FAILURE)
Решение
# ip link add name docker0 type bridge
# ip addr add dev docker0 172.17.0.1/16



OpenVPN

Развертывание в Docker
https://github.com/kylemanna/docker-openvpn

Статическая адресация
$ docker exec -it <name> /bin/sh
# vi <openvpn>.conf 	
add:	client-config-dir /etc/openvpn/ccd
# cd /etc/openvpn/ccd
# touch <client name> 
add:	ifconfig-push <static ip> 255.255.255.0
$ reboot

Автоподключение клиента
$ sudo vim /etc/default/openvpn
uncoment	AUTOSTART="all"
$ cp <file.ovpn> /etc/openvpn/
$ mv /etc/openvpn/<file.ovpn> /etc/openvpn/client.conf
$ sudo systemctl enable openvpn@client.service
$ sudo systemctl daemon-reload
$ sudo service openvpn@client start

Подключение без перенаправления трафика с устройства
OpenVPN подключение без перенаправления трафика
$ sudo touch /etc/openvpn/ovpn-routing.sh
	#!/bin/bash
	ip route add 192.168.255.0/24 via 192.168.255.22
	
<192.168.255.0> - openvpn internal network
<192.168.255.22> - device ip address inside the VPN
$ sudo vim /etc/openvpn/openvpn.conf
до части <key> добавить:
	route-noexec
	script-security 2 
	up ovpn-routing.sh
$ sudo service openvpn restart



SSH Tunneling (проброс порта)
https://www.devdungeon.com/content/expose-local-port-over-remote-vps-ssh-remote-port-forwarding



Резервное копирование Duplicity:
Без шифрования

первый раз
# duplicity full --exclude=/proc --exclude=/sys --exclude=/dev --exclude=/proc --exclude=/sys --exclude=/mnt --exclude=/media --exclude=/tmp --exclude=/var/spool --exclude=/var/cache --exclude=/var/tmp --exclude=/swap / webdavs://<username>:<pass>@cloud.scan-87.online:443/remote.php/dav/files/<username>/backup --no-encryption -v 9

последующие
# duplicity incremental --exclude=/proc --exclude=/sys --exclude=/dev --exclude=/proc --exclude=/sys --exclude=/mnt --exclude=/media --exclude=/tmp --exclude=/var/spool --exclude=/var/cache --exclude=/var/tmp --exclude=/swap / webdavs://<username>:<pass>@cloud.scan-87.online:443/remote.php/dav/files/<username>/backup --no-encryption -v 9

восстановление
# duplicity --no-encryption --file-to-restore / webdavs://<username>:<pass>@cloud.scan-87.online:443/remote.php/dav/files/<username>/backup /restore -v 9

проверка
# duplicity collection-status --no-encryption webdavs://<username>:<pass>@cloud.scan-87.online:443/remote.php/dav/files/<username>/backup -v 9


базовые команды
https://serveradmin.ru/backup-linux-servera-s-pomoshhyu-duplicity/

настройка шифрования
https://www.digitalocean.com/community/tutorials/how-to-use-duplicity-with-gpg-to-securely-automate-backups-on-ubuntu
